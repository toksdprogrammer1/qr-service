/* ----------------------------------------------------------------------------------------------------------------------
* © Copyright 2018 Visa. All Rights Reserved.
*
* NOTICE: The software and accompanying information and documentation (together, the “Software”) remain the property of
* and are proprietary to Visa and its suppliers and affiliates. The Software remains protected by intellectual property
* rights and may be covered by U.S. and foreign patents or patent applications. The Software is licensed and not sold.
*
* By accessing the Software you are agreeing to Visa's terms of use (developer.visa.com/terms) and privacy policy
* (developer.visa.com/privacy). In addition, all permissible uses of the Software must be in support of Visa products,
* programs and services provided through the Visa Developer Program (VDP) platform only (developer.visa.com).
* THE SOFTWARE AND ANY ASSOCIATED INFORMATION OR DOCUMENTATION IS PROVIDED ON AN “AS IS,” “AS AVAILABLE,” “WITH ALL
* FAULTS” BASIS WITHOUT WARRANTY OR CONDITION OF ANY KIND. YOUR USE IS AT YOUR OWN RISK.
---------------------------------------------------------------------------------------------------------------------- */

/*
 * Receive Side Callback API
 * To facilitate the implementation of mVisa, Visa provides mVisa Receive Side API specifications to clients who implement a set of outbound RESTful APIs (Receive Side APIs) so that Visa can call these APIs to request clients to process the transactions over the Internet.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.netpluspay.visa.qr.Model;

import com.netpluspay.visa.qr.util.DecryptUtil;
import lombok.Data;
import lombok.EqualsAndHashCode;

import javax.persistence.*;
import javax.validation.constraints.NotNull;

@Entity
@Data
@EqualsAndHashCode
public class ReceiveP2MAdvicepostPayload {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  Long id;


  private String billIdFormat;


  @NotNull
  private String decimalPositionIndicator;
  
  
  @NotNull
  private String retrievalReferenceNumber;


  @NotNull
  private String messageType;



  private String authIdResponse;


  @NotNull
  private String originatorCountryCode;


  @NotNull
  private String billId;


  @NotNull
  private String localTransactionDate;


  @NotNull
  private String transmissionDateTime;


  @NotNull
  private String transactionFeeAmount;


  @NotNull
  private String transactionCurrencyCode;


  @Transient
  private String encMerchantPAN;

  private String merchantPAN;

  @NotNull
  private String systemTraceAuditNumber;


  @NotNull
  private String velocityLimitIndicator;

  @Transient
  private String encConsumerName;

  private String consumerName;

  @NotNull
  private String originatorBIN ;


  @NotNull
  private String rejectionCode;


  @NotNull
  private String transactionAmount;


  @NotNull
  private String localTransactionTime;

  @Transient
  private String encConsumerPAN;

  private String consumerPAN;

  @NotNull
  private String responseCode;


  @NotNull
  private String visaTransactionId;



  private String refId;


  

  
}



